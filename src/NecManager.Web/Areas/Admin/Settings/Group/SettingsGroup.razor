@page "/admin/reglages/groupes"

@using Microsoft.AspNetCore.Components.QuickGrid
@using NecManager.Common.DataEnum;
@using NecManager.Web.Areas.Admin.Settings.Group.ViewModels;
@using NecManager.Web.Areas.Admin.Student.ViewModel;
@using NecManager.Web.Components.Modal

<TopBar Title="Admin - Groupes" BackUrl="/admin/reglages" />

<Dialog Title="Création d'un groupe"
        ValidateButtonText="@this.ValidateButtonLabel"
        CancelButtonText="Annuler"
        OnValidate="this.OnValidCreateOrUpdateFormAsync"
        @ref="this.groupsCreationFormDialog">
    <ChildContent>
        <EditForm Model="this.ModelForm">
            <DataAnnotationsValidator />
            <div class="row">
                <div class="form-group">
                    <label class="form-label" for="name">Nom du groupe</label>
                    <InputText class="form-control" id="name" @bind-Value="this.ModelForm.Title"></InputText>
                </div>

                <div class="form-group">
                    <label class="form-label" for="cat">Armes</label>
                    <InputSelect class="form-control" @bind-Value="this.ModelForm.Weapon" id="cat">
                        @foreach (var weapon in Enum.GetValues(typeof(WeaponType)))
                        {
                            <option value="@weapon">@weapon</option>
                        }
                    </InputSelect>
                </div>
            </div>
            <div class="form-group">
                <button type="button" class="btn-primary" @onclick="this.ShowCategoriesDialog">Catégories</button>
            </div>
            <label for="studentFilter">Recherche étudiant</label>
            <div>
                <input type="text" id="studentFilter" @oninput="this.OnStudentFilterChangeEventHandler" />
                @if (this.AvailableStudents.Count > 0)
                {
                    <div class="student-search">
                        @foreach (var student in this.AvailableStudents)
                        {
                            <span @onclick="@(() => this.OnStudentClickEventHandler(student.Id))">@student.FirstName @student.LastName [@student.Weapon - @student.Categorie]</span>
                        }
                    </div>
                }
                <div class="row">
                    @foreach (var studentAdded in this.ModelForm.Students.OrderBy(x => x.LastName))
                    {
                        <div class="row">
                            <span>@studentAdded.FirstName @studentAdded.LastName</span>
                            <i class="oi oi-x" @onclick="@(() => this.OnStudentDeleteClickEventHandler(studentAdded.Id))"></i>
                        </div>
                    }
                </div>
            </div>
        </EditForm>
    </ChildContent>
</Dialog>

<DialogSelector TViewModel="AdminGroupSelectableCategories"
                Title="Selection des catégories"
                Description="Description"
                CancelButtonText="Fermer"
                ValidateButtonText="Valider"
                ValidateAction="@this.AddOrRemoveCategories"
                Items="@this.Categories"
                @ref="categorieSelectorDialog">
    <ItemTemplate Context="cat">
        @cat.CategoryName
    </ItemTemplate>
</DialogSelector>

<div class="admin-container">
    <div class="admin-container-actions">
        <button class="btn-primary" @onclick="@this.CreateGroupEventHandler">NOUVEAU</button>
    </div>
    @if(!string.IsNullOrWhiteSpace(this.ErrorMessage))
    {
        <i class="error">@this.ErrorMessage</i>
    }
    <QuickGrid Items="@this.Groups" TGridItem="GroupBaseViewModel" Pagination="@pagination" @ref="groupsGrid">
        <PropertyColumn Property="@(g => g!.Title)" Title="Groupe" />
        <PropertyColumn Property="@(g => g!.Weapon)" Title="Arme" Align="Align.Center" />
        <PropertyColumn Property="@(g => g!.StudentCount)" Title="Nb Etudiants" Align="Align.Center" />
        <PropertyColumn Property="@(g => string.Join(", ", g!.Categories))" Title="Catégories" />
        <TemplateColumn Title="Actions" Align="Align.Right">
            <button class="btn-icon" @onclick="@(() => this.UpdateGroupClickEventHandlerAsync(context!.Id))"><i class="oi oi-pencil"></i></button>
            <button class="btn-icon" @onclick="@(() => this.OnDeleteGroupClickEventHandler(context!.Id))"><i class="oi oi-trash"></i></button>
        </TemplateColumn>
    </QuickGrid>
    <Paginator Value="@pagination" />
</div>
